services:

  # --- VPN
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: "{{ server.hostname }}"
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    network_mode: host
    cap_add:
      - net_admin
      - net_raw
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTHKEY}
      - TS_USERSPACE=false
      - TS_STATE_DIR=/var/lib/tailscale
    healthcheck:
      # Check if Tailscale IP is assigned
      test: ["CMD-SHELL", " tailscale status | grep -q {{ server.ip.private }}"]

  # --- WATCHDOG
  docker-socket-proxy:
    container_name: "docker-socket-proxy"
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    restart: unless-stopped
    environment:
      # For Portainer
      - CONTAINERS=1
      - SERVICES=1
      - TASKS=1
      - IMAGES=1
      - INFO=1
      - VOLUMES=1
      - NETWORKS=1
      # Danger zone
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - "{{ server.ip.private }}:2375:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    depends_on:
      tailscale:
        condition: service_healthy

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  glances:
    image: nicolargo/glances:latest
    restart: unless-stopped
    container_name: glances
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/os-release:/etc/os-release:ro
      - "{{ server.volumes.data.path }}:/media/data:ro" # Read only data disk
    ports:
      - "{{ server.ip.private }}:61208:61208"
    environment:
      - "GLANCES_OPT=-w"
    depends_on:
      tailscale:
        condition: service_healthy

  # --- MEDIA
  jellyfin:
    container_name: jellyfin
    image: ghcr.io/hotio/jellyfin:latest
    restart: unless-stopped
    ports:
      - "{{ server.ip.private }}:8096:8096"
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/jellyfin/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    # Hardware acceleration
    group_add:
      - "105" # render group
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128 # Intel graphics
    depends_on:
      tailscale:
        condition: service_healthy

  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent:latest
    restart: unless-stopped
    ports:
      - "{{ server.ip.private }}:9000:8080"
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/qbittorrent/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
    depends_on:
      tailscale:
        condition: service_healthy

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    ports:
      - "{{ server.ip.private }}:8989:8989"
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/sonarr/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
    depends_on:
      tailscale:
        condition: service_healthy

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    ports:
      - "{{ server.ip.private }}:7878:7878"
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/radarr/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
    depends_on:
      tailscale:
        condition: service_healthy

  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:latest
    restart: unless-stopped
    ports:
      - "{{ server.ip.private }}:6767:6767"
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/bazarr/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
    depends_on:
      tailscale:
        condition: service_healthy

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:latest
    restart: unless-stopped
    ports:
      - "{{ server.ip.private }}:9696:9696"
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/prowlarr/config:/config
    networks:
      - media
    depends_on:
      tailscale:
        condition: service_healthy


networks:
  media: