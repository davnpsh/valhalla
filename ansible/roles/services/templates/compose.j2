services:

  # --- ROUTER TO TAILSCALE
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale-router
    hostname: "{{ server.hostname }}"
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTHKEY}
      - TS_USERSPACE=false
      - TS_STATE_DIR=/var/lib/tailscale
    networks:
      - proxy
    healthcheck:
      # Check if Tailscale network interface is loaded
      test: ["CMD-SHELL", " ip a | grep -q tailscale"]

  # --- PROXY
  # Dashboard port: 81
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: 'nginx-proxy-manager'
    restart: unless-stopped
    network_mode: service:tailscale
    volumes:
      - ${PWD}/nginx/data:/data
      - ${PWD}/nginx/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 10s
      timeout: 3s
    depends_on:
      tailscale:
        condition: service_healthy

  # --- WATCHDOG
  # Exposes ports: 2375
  docker-socket-proxy:
    container_name: "docker-socket-proxy"
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    restart: unless-stopped
    environment:
      # For Portainer
      - CONTAINERS=1
      - SERVICES=1
      - TASKS=1
      - IMAGES=1
      - INFO=1
      - VOLUMES=1
      - NETWORKS=1
      # Danger zone
      - POST=0 # Disallow any POST operations (effectively read-only)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    networks:
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  # Exposes ports: 61208
  glances:
    image: nicolargo/glances:latest
    restart: unless-stopped
    container_name: glances
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/os-release:/etc/os-release:ro
      - "{{ server.volumes.data.path }}:/media/data:ro" # Read only data disk
    environment:
      - "GLANCES_OPT=-w"
    networks:
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy

  # --- MEDIA
  # Exposes ports: 8096
  jellyfin:
    container_name: jellyfin
    image: ghcr.io/hotio/jellyfin:latest
    restart: unless-stopped
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/jellyfin/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    # Hardware acceleration
    group_add:
      - "105" # render group
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128 # Intel graphics
    networks:
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy

  # Exposes ports: 8080
  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent:latest
    restart: unless-stopped
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/qbittorrent/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy

  # Exposes ports: 8989
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/sonarr/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy

  # Exposes ports: 7878
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/radarr/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy

  # Exposes ports: 6767
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:latest
    restart: unless-stopped
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/bazarr/config:/config
      - "{{ server.volumes.media_library.path }}:/data" # Shared media library
    networks:
      - media
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy

  # Exposes ports: 9696
  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:latest
    restart: unless-stopped
    environment:
      - PUID={{ user.PUID }}
      - PGID={{ user.PGID }}
      - UMASK=002
      - TZ={{ server.timezone }}
    volumes:
      - ${PWD}/prowlarr/config:/config
    networks:
      - media
      - proxy
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy


networks:
  proxy:
  media: